<div id="fieldContent">{{Front}}</div>

{{FrontSide}}

<hr id=answer>

<br >
<br >

<form id="myForm">
    <input type="text" id="userInput" placeholder="Enter something...">
    <!-- <button type="submit" id="submitButton">Send</button> -->
</form>



<!-- Place to show the response -->

<div id="response"></div>


<script>
// Access the element containing the field content
var fieldContentElement = document.getElementById("fieldContent").innerText;


var prompt =
  "I am learning the German Word: " +
  fieldContentElement +
  "\n Please check if the following sentence is correct or sounds natural, if not, please give the correct and natural verion: \n";

document.getElementById('myForm').onsubmit = function(event) {
    event.preventDefault();
	  document.getElementById("userInput").blur()
    sendRequestToOpenAI();
};

function sendRequestToOpenAI() {
  var userInput = document.getElementById("userInput").value;
  prompt = prompt + userInput + "\n";
  console.log(prompt);
  // Set up the XMLHttpRequest
  var xhr = new XMLHttpRequest();
  xhr.open("POST", "https://api.openai.com/v1/chat/completions", true);
  xhr.setRequestHeader("Content-Type", "application/json");
  // SECURITY NOTE: The API Key should not be exposed in client-side code like this.
  // Consider securely retrieving it or using server-side code to handle the API request.
  xhr.setRequestHeader(
    "Authorization",
    "Bearer sk-API_KEY"
  );

  // Define what happens on successful data submission
  xhr.onreadystatechange = function () {
    console.log(xhr.status);
    if (xhr.readyState == 4 && xhr.status == 200) {
      // Parse the JSON response
      var jsonResponse = JSON.parse(xhr.responseText);

      // Handle and display the response (adjust according to the actual response structure)
      document.getElementById("response").innerText =
        jsonResponse.choices[0].message.content;
    }
		console.log(jsonResponse.choices[0].message.content);
  };

  // Convert the data to JSON and send it
  xhr.send(
    JSON.stringify({
      model: "gpt-3.5-turbo",
      messages: [{ role: "user", content: prompt }],
      temperature: 0.7,
    })
  );
}
</script>
